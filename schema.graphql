type Event {
  id: ID!
  title: String!
  description: String!
  datetime: String!
  venue: ID!
  vendors: [Vendor]
  users: [User]
}

type Vendor {
  id: ID!
  name: String!
  description: String!
  phone: String!
  email: String!
  address: String!
  city: String!
  state: String!
  zip: String!
  country: String!
  website: String!
  events: [Event]
}

type Venue {
  id: ID!
  name: String!
  description: String!
  phone: String!
  email: String!
  address: String!
  city: String!
  state: String!
  zip: String!
  country: String!
  website: String!
  events: [Event]
}

enum Role {
  ADMIN
  USER
}

type User {
  id: ID!
  role: Role!
  fname: String!
  lname: String!
  phone: String!
  email: String!
  password: String!
  events: [Event]
}

type InsertionResponse {
  acknowledged: Boolean
  insertedId: String
}

type UpsertionResponse {
  acknowledged: Boolean
}

type Query {
  events: [Event]
  event(id: ID!): Event
  vendors: [Vendor]
  vendor(id: ID!): Vendor
  venues: [Venue]
  venue(id: ID!): Venue
  users: [User]
  user(id: ID!): User
}

type Mutation {
  createEvent(
    title: String!
    description: String!
    datetime: String!
    venue: ID!
    vendors: [ID]
    users: [ID]
  ): InsertionResponse
  updateEvent(
    id: ID!
    title: String
    description: String
    datetime: String
    venue: ID
    vendors: [ID]
    users: [ID]
  ): UpsertionResponse
  deleteEvent(id: ID!): Event
  createVendor(
    name: String!
    description: String!
    phone: String!
    email: String!
    address: String!
    city: String!
    state: String!
    zip: String!
    country: String!
    website: String!
    events: [ID]
  ): InsertionResponse
  updateVendor(
    id: ID!
    name: String!
    description: String!
    phone: String!
    email: String!
    address: String!
    city: String!
    state: String!
    zip: String!
    country: String!
    website: String!
    events: [ID]
  ): UpsertionResponse
  deleteVendor(id: ID!): Vendor
  createVenue(
    name: String!
    description: String!
    phone: String!
    email: String!
    address: String!
    city: String!
    state: String!
    zip: String!
    country: String!
    website: String!
    events: [ID]
  ): InsertionResponse
  updateVenue(
    id: ID!
    name: String!
    description: String!
    phone: String!
    email: String!
    address: String!
    city: String!
    state: String!
    zip: String!
    country: String!
    website: String!
    events: [ID]
  ): UpsertionResponse
  deleteVenue(id: ID!): Venue
  createUser(
    role: Role!
    fname: String!
    lname: String!
    phone: String!
    email: String!
    password: String!
    events: [ID]
  ): InsertionResponse
  updateUser(
    id: ID!
    role: Role!
    fname: String!
    lname: String!
    phone: String!
    email: String!
    password: String!
    events: [ID]
  ): User
  deleteUser(id: ID!): User
}
